name: 'Skaffold Deploy'
description: 'Build and deploy applications using Skaffold'
branding:
  icon: 'upload-cloud'
  color: 'blue'

inputs:
  skaffold-version:
    description: 'Skaffold version to use'
    required: false
    default: 'latest'
  command:
    description: 'Skaffold command to run (build, deploy, run, debug, diagnose)'
    required: false
    default: 'run'
  profile:
    description: 'Skaffold profile to use'
    required: false
  default-repo:
    description: 'Default container registry'
    required: true
  filename:
    description: 'Path to skaffold.yaml'
    required: false
    default: 'skaffold.yaml'
  namespace:
    description: 'Kubernetes namespace'
    required: false
  tag:
    description: 'Custom tag for images'
    required: false
  short-hash:
    description: 'Include git short hash in tag'
    required: false
    default: 'false'
  cache-file:
    description: 'Path to cache file'
    required: false
  build-artifacts:
    description: 'Path to build artifacts file'
    required: false
  cache-artifacts:
    description: 'Cache artifacts output'
    required: false
  collect-metrics:
    description: 'Enable/disable metrics collection'
    required: false
    default: 'false'
  output:
    description: 'Output file for render command'
    required: false

runs:
  using: 'composite'
  steps:
    - name: Install Skaffold
      shell: bash
      run: |
        curl -Lo skaffold https://storage.googleapis.com/skaffold/releases/${{ inputs.skaffold-version }}/skaffold-linux-amd64
        chmod +x skaffold
        sudo mv skaffold /usr/local/bin
        skaffold version
        skaffold config set --global collect-metrics ${{ inputs.collect-metrics }}

    - name: Get Git short SHA
      if: inputs.short-hash == 'true'
      shell: bash
      id: git_sha
      run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

    - name: Build Command
      shell: bash
      run: |
        CMD="skaffold ${{ inputs.command }}"
        
        if [ ! -z "${{ inputs.filename }}" ]; then
          CMD="$CMD --filename ${{ inputs.filename }}"
        fi
        
        if [ ! -z "${{ inputs.profile }}" ]; then
          CMD="$CMD --profile ${{ inputs.profile }}"
        fi
        
        if [ ! -z "${{ inputs.namespace }}" ]; then
          CMD="$CMD --namespace ${{ inputs.namespace }}"
        fi
        
        if [ ! -z "${{ inputs.tag }}" ]; then
          if [ "${{ inputs.short-hash }}" = "true" ]; then
            TAG="${{ steps.git_sha.outputs.sha_short }}-${{ inputs.tag }}"
          else
            TAG="${{ inputs.tag }}"
          fi
          CMD="$CMD --tag $TAG"
        fi
        
        if [ ! -z "${{ inputs.cache-file }}" ]; then
          CMD="$CMD --cache-file ${{ inputs.cache-file }}"
        fi
        
        if [ ! -z "${{ inputs.build-artifacts }}" ]; then
          CMD="$CMD --build-artifacts ${{ inputs.build-artifacts }}"
        fi
        
        if [ ! -z "${{ inputs.cache-artifacts }}" ]; then
          CMD="$CMD --cache-artifacts ${{ inputs.cache-artifacts }}"
        fi
        
        if [ ! -z "${{ inputs.output }}" ]; then
          CMD="$CMD --output ${{ inputs.output }}"
        fi
        
        echo "Executing: $CMD"
        eval $CMD
      env:
        SKAFFOLD_DEFAULT_REPO: ${{ inputs.default-repo }}
